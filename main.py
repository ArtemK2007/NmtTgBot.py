from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update, InputMediaPhoto
from dotenv import load_dotenv
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, ContextTypes
from telegram.error import BadRequest # –Ü–º–ø–æ—Ä—Ç—É—î–º–æ BadRequest –¥–ª—è —Å–ø–µ—Ü–∏—Ñ—ñ—á–Ω–æ—ó –æ–±—Ä–æ–±–∫–∏ –ø–æ–º–∏–ª–æ–∫
import os

# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–∏—Ö –æ—Ç–æ—á–µ–Ω–Ω—è –∑ .env —Ñ–∞–π–ª—É
load_dotenv()
TOKEN = os.getenv("TOKEN")

#-----------------------------------------------------------------------------------------------------------------------
# –°–ø–∏—Å–æ–∫ —Ç–µ–º –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏—Ü—ñ (29 —Ç–µ–º)
mathematics_topics = [
    "–ß–∏—Å–ª–∞ —Ç–∞ –¥—ñ—ó –∑ –Ω–∏–º–∏",
    "–†–∞—Ü—ñ–æ–Ω–∞–ª—å–Ω—ñ —á–∏—Å–ª–∞",
    "–§—É–Ω–∫—Ü—ñ—ó",
    "–õ—ñ–Ω—ñ–π–Ω—ñ —Ä—ñ–≤–Ω—è–Ω–Ω—è —Ç–∞ –Ω–µ—Ä—ñ–≤–Ω–æ—Å—Ç—ñ",
    "–ö–≤–∞–¥—Ä–∞—Ç–Ω—ñ —Ä—ñ–≤–Ω—è–Ω–Ω—è",
    "–°–∏—Å—Ç–µ–º–∏ —Ä—ñ–≤–Ω—è–Ω—å",
    "–ü–æ—Ö—ñ–¥–Ω–∞ —Ç–∞ —ó—ó –∑–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è",
    "–ï–ª–µ–º–µ–Ω—Ç–∏ –∫–æ–º–±—ñ–Ω–∞—Ç–æ—Ä–∏–∫–∏",
    "–¢—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä—ñ—è",
    "–ì–µ–æ–º–µ—Ç—Ä–∏—á–Ω—ñ —Ñ—ñ–≥—É—Ä–∏",
    "–í–µ–∫—Ç–æ—Ä–∏",
    "–ü–ª–∞–Ω—ñ–º–µ—Ç—Ä—ñ—è",
    "–°—Ç–µ—Ä–µ–æ–º–µ—Ç—Ä—ñ—è",
    "–ê–Ω–∞–ª—ñ—Ç–∏—á–Ω–∞ –≥–µ–æ–º–µ—Ç—Ä—ñ—è",
    "–ü—Ä–æ–≥—Ä–µ—Å—ñ—ó",
    "–ú–Ω–æ–∂–∏–Ω–∏",
    "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
    "–¢–µ–æ—Ä—ñ—è –π–º–æ–≤—ñ—Ä–Ω–æ—Å—Ç–µ–π",
    "–õ–æ–≥–∞—Ä–∏—Ñ–º–∏",
    "–ü–æ–∫–∞–∑–Ω–∏–∫–æ–≤—ñ —Ñ—É–Ω–∫—Ü—ñ—ó",
    "–ì—Ä–∞—Ñ—ñ–∫–∏ —Ñ—É–Ω–∫—Ü—ñ–π",
    "–ü–æ—Ö—ñ–¥–Ω–∞ –≤ –¥–µ—Ç–∞–ª—è—Ö",
    "–Ü–Ω—Ç–µ–≥—Ä–∞–ª–∏ (–±–∞–∑–æ–≤–æ)",
    "–†—ñ–≤–Ω—è–Ω–Ω—è –∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏",
    "–°–∏–º–µ—Ç—Ä—ñ—ó —Ç–∞ –ø–µ—Ä–µ—Ç–≤–æ—Ä–µ–Ω–Ω—è",
    "–†—ñ–≤–Ω—è–Ω–Ω—è –∫–æ–ª–∞, –µ–ª—ñ–ø—Å–∞",
    "–ù–µ—Ä–∞–≤–µ–Ω—Å—Ç–≤–∞ –∑ –º–æ–¥—É–ª—è–º–∏",
    "–ó–∞–¥–∞—á—ñ –Ω–∞ —Ä—É—Ö",
    "–ö–æ–º–±—ñ–Ω–∞—Ç–æ—Ä–∏–∫–∞ –≤ –∑–∞–¥–∞—á–∞—Ö",
]
#-----------------------------------------------------------------------------------------------------------------------
# –°–ø–∏—Å–æ–∫ —Ç–µ–º –∑ –£–∫—Ä–∞—ó–Ω—Å—å–∫–æ—ó –º–æ–≤–∏ (–¥–æ–¥–∞–Ω–æ –¥–ª—è –ø—Ä–∏–∫–ª–∞–¥—É)
ukrainian_topics = [
    "–§–æ–Ω–µ—Ç–∏–∫–∞. –û—Ä—Ñ–æ–µ–ø—ñ—è. –ì—Ä–∞—Ñ—ñ–∫–∞. –û—Ä—Ñ–æ–≥—Ä–∞—Ñ—ñ—è",
    "–õ–µ–∫—Å–∏–∫–æ–ª–æ–≥—ñ—è. –§—Ä–∞–∑–µ–æ–ª–æ–≥—ñ—è",
    "–ë—É–¥–æ–≤–∞ —Å–ª–æ–≤–∞. –°–ª–æ–≤–æ—Ç–≤—ñ—Ä. –ú–æ—Ä—Ñ–æ–ª–æ–≥—ñ—è",
    "–°–∏–Ω—Ç–∞–∫—Å–∏—Å. –ü—É–Ω–∫—Ç—É–∞—Ü—ñ—è",
    "–°—Ç–∏–ª—ñ—Å—Ç–∏–∫–∞. –ö—É–ª—å—Ç—É—Ä–∞ –º–æ–≤–ª–µ–Ω–Ω—è",
    "–¢–µ–∫—Å—Ç–æ–ª–æ–≥—ñ—è",
    "–†–æ–∑–≤–∏—Ç–æ–∫ –º–æ–≤–ª–µ–Ω–Ω—è",
    "–ó–∞—Å–æ–±–∏ –≤–∏—Ä–∞–∑–Ω–æ—Å—Ç—ñ –º–æ–≤–∏"
]
#-----------------------------------------------------------------------------------------------------------------------
# –°–ø–∏—Å–æ–∫ —Ç–µ–º –∑ —ñ—Å—Ç–æ—Ä—ñ—ó –£–∫—Ä–∞—ó–Ω–∏ (37 —Ç–µ–º)
history_topics = [
    "–í—Å—Ç—É–ø –¥–æ —ñ—Å—Ç–æ—Ä—ñ—ó –£–∫—Ä–∞—ó–Ω–∏",
    "–°—Ç–∞—Ä–æ–¥–∞–≤–Ω—è —ñ—Å—Ç–æ—Ä—ñ—è –£–∫—Ä–∞—ó–Ω–∏",
    "–ö–æ—Ä–æ–ª—ñ–≤—Å—Ç–≤–æ –†—É—Å—å–∫–µ. –ú–æ–Ω–≥–æ–ª—å—Å—å–∫–∞ –Ω–∞–≤–∞–ª–∞",
    "–†—É—Å—å–∫—ñ –∫–Ω—è–∑—ñ–≤—Å—Ç–≤–∞ XIV‚ÄìXVI —Å—Ç. –ö—Ä–∏–º—Å—å–∫–µ —Ö–∞–Ω—Å—Ç–≤–æ",
    "–†—É—Å—å-–£–∫—Ä–∞—ó–Ω–∞: –≤–∏–Ω–∏–∫–Ω–µ–Ω–Ω—è –ö–∏—ó–≤—Å—å–∫–æ—ó –¥–µ—Ä–∂–∞–≤–∏",
    "–†—É—Å—å-–£–∫—Ä–∞—ó–Ω–∞: —Ä–æ–∑–∫–≤—ñ—Ç –ö–∏—ó–≤—Å—å–∫–æ—ó –¥–µ—Ä–∂–∞–≤–∏",
    "–†—É—Å—å-–£–∫—Ä–∞—ó–Ω–∞: –∫—É–ª—å—Ç—É—Ä–∞ IX‚ÄìXIV —Å—Ç–æ–ª—ñ—Ç—å",
    "–î—Ä—É–≥–∞ –ø–æ–ª–æ–≤–∏–Ω–∞ XVI ‚Äì –ø–µ—Ä—à–∞ –ø–æ–ª–æ–≤–∏–Ω–∞ XVIII —Å—Ç.",
    "–£–∫—Ä–∞—ó–Ω—Å—å–∫—ñ –∑–µ–º–ª—ñ –≤ –†–µ—á—ñ –ü–æ—Å–ø–æ–ª–∏—Ç—ñ–π (II –ø–æ–ª. XVI —Å—Ç.)",
    "–£–∫—Ä–∞—ó–Ω—Å—å–∫—ñ –∑–µ–º–ª—ñ –≤ –†–µ—á—ñ –ü–æ—Å–ø–æ–ª–∏—Ç—ñ–π (–Ü –ø–æ–ª. XVII —Å—Ç.)",
    "–ù–∞—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ-–≤–∏–∑–≤–æ–ª—å–Ω–∞ –≤—ñ–π–Ω–∞ —Å–µ—Ä–µ–¥–∏–Ω–∏ XVII —Å—Ç.",
    "–ö–æ–∑–∞—Ü—å–∫–∞ –¥–µ—Ä–∂–∞–≤–∞ (50‚Äì80-—Ç—ñ —Ä—Ä. XVII —Å—Ç.)",
    "–£–∫—Ä–∞—ó–Ω—Å—å–∫—ñ –∑–µ–º–ª—ñ –∫. XVII ‚Äì –Ü –ø–æ–ª. XVIII —Å—Ç.",
    "–£–∫—Ä–∞—ó–Ω—Å—å–∫—ñ –∑–µ–º–ª—ñ –≤ –Ü–Ü –ø–æ–ª. XVIII —Å—Ç.",
    "–ö—ñ–Ω–µ—Ü—å XVIII ‚Äì XIX —Å—Ç.",
    "–£–∫—Ä. –∑–µ–º–ª—ñ –≤ –†–æ—Å. —ñ–º–ø–µ—Ä—ñ—ó (–∫. XVIII ‚Äì –Ü –ø–æ–ª. XIX —Å—Ç.)",
    "–£–∫—Ä. –∑–µ–º–ª—ñ –≤ –ê–≤—Å—Ç—Ä. —ñ–º–ø–µ—Ä—ñ—ó (–∫. XVIII ‚Äì –Ü –ø–æ–ª. XIX —Å—Ç.)",
    "–ö—É–ª—å—Ç—É—Ä–∞ –£–∫—Ä–∞—ó–Ω–∏ (–∫. XVIII ‚Äì –Ü –ø–æ–ª. XIX —Å—Ç.)",
    "–£–∫—Ä. –∑–µ–º–ª—ñ –≤ –†–æ—Å. —ñ–º–ø–µ—Ä—ñ—ó (–Ü–Ü –ø–æ–ª. XIX —Å—Ç.)",
    "–£–∫—Ä. –∑–µ–º–ª—ñ –≤ –ê–≤—Å—Ç—Ä–æ-–£–≥–æ—Ä—â–∏–Ω—ñ (–Ü–Ü –ø–æ–ª. XIX —Å—Ç.)",
    "–ö—É–ª—å—Ç—É—Ä–∞ –£–∫—Ä–∞—ó–Ω–∏ (–Ü–Ü –ø–æ–ª. XIX ‚Äì –ø–æ—á. XX —Å—Ç.)",
    "–£–∫—Ä. –∑–µ–º–ª—ñ –≤ –†–æ—Å. —ñ–º–ø–µ—Ä—ñ—ó (1900‚Äì1914 —Ä—Ä.)",
    "–£–∫—Ä. –∑–µ–º–ª—ñ –≤ –ê–≤—Å—Ç—Ä–æ-–£–≥–æ—Ä—â–∏–Ω—ñ (1900‚Äì1914 —Ä—Ä.)",
    "–Ü—Å—Ç–æ—Ä—ñ—è –£–∫—Ä–∞—ó–Ω–∏ –•–• ‚Äì –ø–æ—á–∞—Ç–∫—É –•–•–Ü —Å—Ç.",
    "–£–∫—Ä–∞—ó–Ω–∞ –≤ —Ä–æ–∫–∏ –ü–µ—Ä—à–æ—ó —Å–≤—ñ—Ç–æ–≤–æ—ó –≤—ñ–π–Ω–∏",
    "–ü–æ—á–∞—Ç–æ–∫ –£–∫—Ä–∞—ó–Ω—Å—å–∫–æ—ó —Ä–µ–≤–æ–ª—é—Ü—ñ—ó",
    "–ì–µ—Ç—å–º–∞–Ω–∞—Ç –ü–∞–≤–ª–∞ –°–∫–æ—Ä–æ–ø–∞–¥—Å—å–∫–æ–≥–æ",
    "–î–∏—Ä–µ–∫—Ç–æ—Ä—ñ—è –£–ù–†",
    "–ö–æ–º—É–Ω—ñ—Å—Ç–∏—á–Ω–∏–π —Ç–æ—Ç–∞–ª—ñ—Ç–∞—Ä–Ω–∏–π —Ä–µ–∂–∏–º –≤ –£–∫—Ä–∞—ó–Ω—ñ",
    "–ë—ñ–ª—å—à–æ–≤–∏—Ü—å–∫–∏–π —Ç–æ—Ç–∞–ª—ñ—Ç–∞—Ä–∏–∑–º –≤ –£–∫—Ä–∞—ó–Ω—ñ",
    "–ó–∞—Ö—ñ–¥–Ω–∞ –£–∫—Ä–∞—ó–Ω–∞ –≤ –º—ñ–∂–≤–æ—î–Ω–Ω–∏–π –ø–µ—Ä—ñ–æ–¥",
    "–ü–æ—á–∞—Ç–æ–∫ –î—Ä—É–≥–æ—ó —Å–≤—ñ—Ç–æ–≤–æ—ó –≤—ñ–π–Ω–∏ (1939‚Äì1941)",
    "–†—É—Ö –û–ø–æ—Ä—É (1941‚Äì1943)",
    "–í–∏–∑–≤–æ–ª–µ–Ω–Ω—è –£–∫—Ä–∞—ó–Ω–∏ (1943‚Äì1945)",
    "–ü–æ–≤–æ—î–Ω–Ω—ñ —Ä–æ–∫–∏ –≤ –£–∫—Ä–∞—ó–Ω—ñ",
    "–î–µ—Å—Ç–∞–ª—ñ–Ω—ñ–∑–∞—Ü—ñ—è",
    "–ö—Ä–∏–∑–∞ —Ä–∞–¥—è–Ω—Å—å–∫–æ—ó —Å–∏—Å—Ç–µ–º–∏",
    "–ù–µ–∑–∞–ª–µ–∂–Ω—ñ—Å—Ç—å –£–∫—Ä–∞—ó–Ω–∏",
    "–°—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–µ—Ä–∂–∞–≤–∏",
    "–ù–æ–≤–∞ –£–∫—Ä–∞—ó–Ω–∞",
]
#-----------------------------------------------------------------------------------------------------------------------
ITEMS_PER_PAGE = 10
EMOJI_START = "üìò "
EMOJI_END = " ‚ú®"
#-----------------------------------------------------------------------------------------------------------------------
# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –≤ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é
async def main_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer() # –ó–∞–≤–∂–¥–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î–º–æ –Ω–∞ callback_query, —â–æ–± –ø—Ä–∏–±—Ä–∞—Ç–∏ "–≥–æ–¥–∏–Ω–Ω–∏–∫" –∑ –∫–Ω–æ–ø–∫–∏
    keyboard = [
        [InlineKeyboardButton("üìö –°–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–º–µ—Ç—ñ–≤", callback_data='main_keyboard')],
        [InlineKeyboardButton("üìö –ö–æ—Ä–∏—Å–Ω—ñ —Ñ–∞–π–ª–∏", callback_data='KorFail')],
        [InlineKeyboardButton("üìù –ü—Ä–∞–∫—Ç–∏—á–Ω—ñ –∑–∞–≤–¥–∞–Ω–Ω—è", callback_data='PrZavd')],
        [InlineKeyboardButton("‚ÑπÔ∏è –ü—Ä–æ –±–æ—Ç–∞", callback_data='about_command')],
        [InlineKeyboardButton("üõ†Ô∏è –î–æ–ø–æ–º–æ–≥–∞", callback_data='help_command')]
    ]

    try:
        await query.edit_message_text(
            text="–ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –≤ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é.\n\n–û–±–µ—Ä—ñ—Ç—å –¥—ñ—é:",
            reply_markup=InlineKeyboardMarkup(keyboard)
        )
    except BadRequest:
        # –Ü–≥–Ω–æ—Ä—É—î–º–æ –ø–æ–º–∏–ª–∫—É, —è–∫—â–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–µ –∑–º—ñ–Ω–∏–ª–æ—Å—å.
        pass

#-----------------------------------------------------------------------------------------------------------------------
# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∫–æ–º–∞–Ω–¥–∏ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton("üìö –°–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–º–µ—Ç—ñ–≤", callback_data='main_keyboard')],
        [InlineKeyboardButton("üìö –ö–æ—Ä–∏—Å–Ω—ñ —Ñ–∞–π–ª–∏", callback_data='KorFail')],
        [InlineKeyboardButton("üìù –ü—Ä–∞–∫—Ç–∏—á–Ω—ñ –∑–∞–≤–¥–∞–Ω–Ω—è", callback_data='PrZavd')],
        [InlineKeyboardButton("‚ÑπÔ∏è –ü—Ä–æ –±–æ—Ç–∞", callback_data='about_command')],
        [InlineKeyboardButton("üõ†Ô∏è –î–æ–ø–æ–º–æ–≥–∞", callback_data='help_command')]
    ]
    await update.message.reply_text(
        "–ü—Ä–∏–≤—ñ—Ç! üëã –¶–µ–π –±–æ—Ç –¥–æ–ø–æ–º–æ–∂–µ —Ç–æ–±—ñ –ø—ñ–¥–≥–æ—Ç—É–≤–∞—Ç–∏—Å—å –¥–æ –ù–ú–¢. –û–±–∏—Ä–∞–π –ø—Ä–µ–¥–º–µ—Ç, –ø—Ä–æ—Ö–æ–¥—å —Ç–µ—Å—Ç–∏, —Å–ª—ñ–¥–∫—É–π –∑–∞ –ø—Ä–æ–≥—Ä–µ—Å–æ–º ‚Äî —ñ –≤–ø–µ–≤–Ω–µ–Ω–æ –π–¥–∏ –¥–æ 200+ –±–∞–ª—ñ–≤! üöÄüìö‚ú®.\n\n–û–±–µ—Ä—ñ—Ç—å –¥—ñ—é:",
        reply_markup=InlineKeyboardMarkup(keyboard)
    )
#-----------------------------------------------------------------------------------------------------------------------
# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∫–æ–º–∞–Ω–¥–∏ "–ü—Ä–æ –±–æ—Ç–∞"
async def about_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    keyboard = [
        [InlineKeyboardButton("üè† –£ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", callback_data='main_menu')],
    ]
    try:
        await query.edit_message_text(
            "–ü—Ä–∏–≤—ñ—Ç! –Ø ‚Äî –±–æ—Ç –¥–ª—è –ø—ñ–¥–≥–æ—Ç–æ–≤–∫–∏ –¥–æ –ù–ú–¢ üìöüöÄ\n\n"
            "–û—Å—å —â–æ —è –≤–º—ñ—é:\n"
            "- –î–æ–ø–æ–º–∞–≥–∞—é –≥–æ—Ç—É–≤–∞—Ç–∏—Å—è –∑ —Ä—ñ–∑–Ω–∏—Ö –ø—Ä–µ–¥–º–µ—Ç—ñ–≤ (–º–∞—Ç–µ–º–∞—Ç–∏–∫–∞, —É–∫—Ä–∞—ó–Ω—Å—å–∫–∞ –º–æ–≤–∞, —ñ—Å—Ç–æ—Ä—ñ—è)\n"
            "- –ù–∞–¥—Å–∏–ª–∞—é –∫–æ—Ä–∏—Å–Ω—ñ –º–∞—Ç–µ—Ä—ñ–∞–ª–∏ —É —Ñ–æ—Ä–º–∞—Ç—ñ PDF\n"
            "- –ü—Ä–æ–≤–æ–¥–∂—É —Ç–µ—Å—Ç–∏ –¥–ª—è –∑–∞–∫—Ä—ñ–ø–ª–µ–Ω–Ω—è –∑–Ω–∞–Ω—å\n\n"
            "–Ø–∫—â–æ –º–∞—î—à –ø–∏—Ç–∞–Ω–Ω—è –∞–±–æ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó ‚Äî –∑–≤–µ—Ä—Ç–∞–π—Å—è –¥–æ —Ä–æ–∑—Ä–æ–±–Ω–∏–∫–∞!\n\n"
            "–©–∞—Å–ª–∏–≤–æ—ó –ø—ñ–¥–≥–æ—Ç–æ–≤–∫–∏ —Ç–∞ –≤–∏—Å–æ–∫–∏—Ö –±–∞–ª—ñ–≤! üéâ",
            reply_markup=InlineKeyboardMarkup(keyboard)
        )
    except BadRequest:
        pass
#-----------------------------------------------------------------------------------------------------------------------
# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∫–æ–º–∞–Ω–¥–∏ "–î–æ–ø–æ–º–æ–≥–∞"
async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    keyboard = [
        [InlineKeyboardButton("üè† –£ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", callback_data='main_menu')],
    ]
    try:
        await query.edit_message_text(
            "üõ†Ô∏è –î–æ–ø–æ–º–æ–≥–∞\n\n"
            "–¶–µ–π –±–æ—Ç –¥–æ–ø–æ–º–æ–∂–µ —Ç–æ–±—ñ –ø—ñ–¥–≥–æ—Ç—É–≤–∞—Ç–∏—Å—è –¥–æ –ù–ú–¢. –û—Å—å —è–∫ –Ω–∏–º –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ç–∏—Å—è:\n"
            "- –û–±–∏—Ä–∞–π –ø—Ä–µ–¥–º–µ—Ç–∏ –∑—ñ —Å–ø–∏—Å–∫—É.\n"
            "- –ü–µ—Ä–µ–≥–ª—è–¥–∞–π —Ç–µ–º–∏ —Ç–∞ –º–∞—Ç–µ—Ä—ñ–∞–ª–∏.\n"
            "- –í—ñ–¥–ø–æ–≤—ñ–¥–∞–π –Ω–∞ —Ç–µ—Å—Ç–æ–≤—ñ –ø–∏—Ç–∞–Ω–Ω—è (–ø–ª–∞–Ω—É—î—Ç—å—Å—è).\n"
            "- –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥—É –º—ñ–∂ —Å—Ç–æ—Ä—ñ–Ω–∫–∞–º–∏.\n\n"
            "–Ø–∫—â–æ –≤–∏–Ω–∏–∫–∞—é—Ç—å –ø—Ä–æ–±–ª–µ–º–∏ –∞–±–æ —î —ñ–¥–µ—ó, –ø–∏—à–∏ —Ä–æ–∑—Ä–æ–±–Ω–∏–∫—É.\n\n"
            "–£—Å–ø—ñ—Ö—ñ–≤ —É –ø—ñ–¥–≥–æ—Ç–æ–≤—Ü—ñ! üöÄ",
            reply_markup=InlineKeyboardMarkup(keyboard)
        )
    except BadRequest:
        pass
#-----------------------------------------------------------------------------------------------------------------------
# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –¥–æ–¥–∞—Ç–∫–æ–≤–∏—Ö –º–∞—Ç–µ—Ä—ñ–∞–ª—ñ–≤ –∑ –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏
async def DovMat(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    file_path = os.path.join("KorysniFaili", "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞_–ú–∞—Ç–µ—Ä—ñ–∞–ª–∏.pdf")
    keyboard = [
        [InlineKeyboardButton("üè† –£ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", callback_data='main_menu')],
    ]
    try:
        with open(file_path, "rb") as file:
            # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ —Ñ–∞–π–ª –Ω–æ–≤–∏–º –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è–º –∑ –∫–Ω–æ–ø–∫–æ—é
            await query.message.reply_document(file, filename="–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞_–ú–∞—Ç–µ—Ä—ñ–∞–ª–∏.pdf")
            # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –æ–∫—Ä–µ–º–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –∫–Ω–æ–ø–∫–æ—é –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –≤ –º–µ–Ω—é
            # –Ø–∫—â–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –±—É–ª–æ –≤—ñ–¥—Ä–µ–¥–∞–≥–æ–≤–∞–Ω–æ, —Ç–æ –∫—Ä–∞—â–µ –≤—ñ–¥–ø—Ä–∞–≤–ª—è—Ç–∏ –Ω–æ–≤–µ.
            # –Ø–∫—â–æ –∂ –≤–∏ —Ö–æ—á–µ—Ç–µ –≤–∏–¥–∞–ª–∏—Ç–∏ –ø–æ–ø–µ—Ä–µ–¥–Ω—î —ñ –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –Ω–æ–≤–µ, —Ü–µ —ñ–Ω—à–∏–π –ø—ñ–¥—Ö—ñ–¥.
            # –ù–∞—Ä–∞–∑—ñ, –ø—Ä–æ—Å—Ç–æ –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –Ω–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –∫–Ω–æ–ø–∫–æ—é.
            await query.message.reply_text("–§–∞–π–ª –¥–ª—è –ø—ñ–¥–≥–æ—Ç–æ–≤–∫–∏:", reply_markup=InlineKeyboardMarkup(keyboard))
    except FileNotFoundError:
        await query.message.reply_text("‚ö†Ô∏è –§–∞–π–ª –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.")
    except Exception as e:
        print(f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—ñ–¥–ø—Ä–∞–≤—Ü—ñ —Ñ–∞–π–ª—É: {e}")
        await query.message.reply_text("–í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–±—Ä–æ–±—Ü—ñ —Ñ–∞–π–ª—É.")
#-----------------------------------------------------------------------------------------------------------------------
# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∫–æ—Ä–∏—Å–Ω–∏—Ö —Ñ–∞–π–ª—ñ–≤
async def KorFail(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    keyboard = [
        [InlineKeyboardButton("üìö –î–æ–¥–∞—Ç–∫–æ–≤—ñ –º–∞—Ç–µ—Ä—ñ–∞–ª–∏ –∑ –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏", callback_data='DovMat')],
        [InlineKeyboardButton("üìö –í—Å—ñ –¥–∞—Ç–∏ –¥–ª—è –ù–ú–¢ –∑ —ñ—Å—Ç–æ—Ä—ñ—ó", callback_data='HistoryDates1')],
        [InlineKeyboardButton("üè† –£ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", callback_data='main_menu')],
        [InlineKeyboardButton("‚û°Ô∏è–î–æ —Å–ø–∏—Å–∫—É –ø—Ä–µ–¥–º–µ—Ç—ñ–≤‚û°Ô∏è", callback_data='main_keyboard')]
    ]
    try:
        await query.edit_message_text(
            "–û—Å—å –≤—Å—ñ –∫–æ—Ä–∏—Å–Ω—ñ —Ñ–∞–π–ª–∏ –¥–ª—è –ø—ñ–¥–≥–æ—Ç–æ–≤–∫–∏üöÄ",
            reply_markup=InlineKeyboardMarkup(keyboard)
        )
    except BadRequest:
        pass
#-----------------------------------------------------------------------------------------------------------------------
# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –≤—Å—ñ—Ö –¥–∞—Ç –∑ —ñ—Å—Ç–æ—Ä—ñ—ó
async def HistoryDates1(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    keyboard = [
        [InlineKeyboardButton("üè† –£ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", callback_data='main_menu')],
        [InlineKeyboardButton("‚û°Ô∏è –ù–∞—Å—Ç—É–ø–Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞", callback_data='HistoryDates2')],
    ]
    await query.answer()
    text = (
        "üè∞ –ö–Ω—è–∂–∞ –¥–æ–±–∞ (–†—É—Å—å-–£–∫—Ä–∞—ó–Ω–∞)\n"
        "860 —Ä. ‚Äî –ü–æ—Ö—ñ–¥ –≤–∞—Ä—è–∑—å–∫–æ–≥–æ –∫–Ω—è–∑—è –ê—Å–∫–æ–ª—å–¥–∞ –Ω–∞ –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏–Ω–æ–ø–æ–ª—å. –£–∫–ª–∞–¥–µ–Ω–æ –ø–µ—Ä—à–∏–π –¥–æ–≥–æ–≤—ñ—Ä –†—É—Å—ñ –∑ –í—ñ–∑–∞–Ω—Ç—ñ—î—é.\n"
        "882 —Ä. ‚Äî –ö–Ω—è–∑—å –û–ª–µ–≥ –æ–±‚Äô—î–¥–Ω–∞–≤ –ø—ñ–≤–Ω—ñ—á–Ω—ñ —Ç–∞ –ø—ñ–≤–¥–µ–Ω–Ω—ñ —Ä—É—Å—å–∫—ñ –∑–µ–º–ª—ñ, —É–±–∏–≤—à–∏ –∫–∏—ó–≤—Å—å–∫–æ–≥–æ –∫–Ω—è–∑—è –ê—Å–∫–æ–ª—å–¥–∞.\n"
        "907‚Äì944 —Ä—Ä. ‚Äî –ü–æ—Ö–æ–¥–∏ —Ä—É—Å—å–∫–∏—Ö –∫–Ω—è–∑—ñ–≤ –û–ª–µ–≥–∞ —Ç–∞ –Ü–≥–æ—Ä—è –Ω–∞ —Å—Ç–æ–ª–∏—Ü—é –í—ñ–∑–∞–Ω—Ç—ñ—ó ‚Äî –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏–Ω–æ–ø–æ–ª—å.\n"
        "988 —Ä. ‚Äî –•—Ä–µ—â–µ–Ω–Ω—è –†—É—Å—ñ. –ö–Ω—è–∑—å –í–æ–ª–æ–¥–∏–º–∏—Ä –∑–∞–ø—Ä–æ–≤–∞–¥–∏–≤ —Ö—Ä–∏—Å—Ç–∏—è–Ω—Å—Ç–≤–æ –¥–µ—Ä–∂–∞–≤–Ω–æ—é —Ä–µ–ª—ñ–≥—ñ—î—é.\n"
        "1019‚Äì1054 —Ä—Ä. ‚Äî –†–æ–∫–∏ –ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –Ø—Ä–æ—Å–ª–∞–≤–∞ –ú—É–¥—Ä–æ–≥–æ –≤ –ö–∏—î–≤—ñ.\n"
        "1036 —Ä. ‚Äî –Ø—Ä–æ—Å–ª–∞–≤ –ú—É–¥—Ä–∏–π —Ä–æ–∑–≥—Ä–æ–º–∏–≤ –ø–µ—á–µ–Ω—ñ–≥—ñ–≤. –ó–∞ –ª–µ–≥–µ–Ω–¥–æ—é, –Ω–∞ –º—ñ—Å—Ü—ñ –ø–µ—Ä–µ–º–æ–≥–∏ –∫–Ω—è–∑—å –Ω–∞–∫–∞–∑–∞–≤ –∑–±—É–¥—É–≤–∞—Ç–∏ –°–æ—Ñ—ñ—ó–≤—Å—å–∫–∏–π —Å–æ–±–æ—Ä —É 1037 —Ä–æ—Ü—ñ.\n"
        "1097 —Ä. ‚Äî –í–æ–ª–æ–¥–∏–º–∏—Ä –ú–æ–Ω–æ–º–∞—Ö –æ—Ä–≥–∞–Ω—ñ–∑—É–≤–∞–≤ –õ—é–±–µ—Ü—å–∫–∏–π –∑‚Äô—ó–∑–¥ –∫–Ω—è–∑—ñ–≤.\n"
        "1113 —Ä. ‚Äî –ù–µ—Å—Ç–æ—Ä –õ—ñ—Ç–æ–ø–∏—Å–µ—Ü—å —É–∫–ª–∞–≤ ¬´–ü–æ–≤—ñ—Å—Ç—å –º–∏–Ω—É–ª–∏—Ö –ª—ñ—Ç¬ª.\n"
        "1113‚Äì1125 —Ä—Ä. ‚Äî –ü—Ä–∞–≤–ª—ñ–Ω–Ω—è –í–æ–ª–æ–¥–∏–º–∏—Ä–∞ –ú–æ–Ω–æ–º–∞—Ö–∞."
    )
    await query.edit_message_text(text, reply_markup=InlineKeyboardMarkup(keyboard))

#-----------------------------------------------------------------------------------------------------------------------
async def HistoryDates2(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    keyboard = [
        [InlineKeyboardButton("üè† –£ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", callback_data='main_menu')],
        [InlineKeyboardButton("‚¨ÖÔ∏è –ú–∏–Ω—É–ª–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞", callback_data='HistoryDates1')],
        [InlineKeyboardButton("‚û°Ô∏è –ù–∞—Å—Ç—É–ø–Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞", callback_data='HistoryDates3')],
    ]
    await query.answer()
    text = (
        "üè∞ –ì–∞–ª–∏—Ü—å–∫–æ-–í–æ–ª–∏–Ω—Å—å–∫–∞ –¥–µ—Ä–∂–∞–≤–∞\n"
        "1187 —Ä. ‚Äî –ù–∞–∑–≤–∞ ¬´–£–∫—Ä–∞—ó–Ω–∞¬ª –≤–ø–µ—Ä—à–µ –∑–≥–∞–¥–∞–Ω–∞ –≤ –ø–∏—Å–µ–º–Ω–∏—Ö –¥–∂–µ—Ä–µ–ª–∞—Ö.\n"
        "1199 —Ä. ‚Äî –ü–æ—á–∞—Ç–æ–∫ —É—Ç–≤–æ—Ä–µ–Ω–Ω—è –ì–∞–ª–∏—Ü—å–∫–æ-–í–æ–ª–∏–Ω—Å—å–∫–æ—ó –¥–µ—Ä–∂–∞–≤–∏.\n\n"
        "‚öîÔ∏è –ú–æ–Ω–≥–æ–ª—å—Å—å–∫–∞ –Ω–∞–≤–∞–ª–∞ —Ç–∞ –ª–∏—Ç–æ–≤—Å—å–∫–æ-–ø–æ–ª—å—Å—å–∫–∞ –¥–æ–±–∞\n"
        "1238‚Äì1264 —Ä—Ä. ‚Äî –ú–æ–Ω–≥–æ–ª—å—Å—å–∫–∞ –Ω–∞–≤–∞–ª–∞. –†—É–π–Ω—É–≤–∞–Ω–Ω—è –ö–∏—î–≤–∞ –≤ 1240 —Ä–æ—Ü—ñ.\n"
        "1362 —Ä. ‚Äî –ë–∏—Ç–≤–∞ –Ω–∞ –°–∏–Ω—ñ –í–æ–¥–∏. –õ–∏—Ç–æ–≤—Ü—ñ –∑–¥–æ–±—É–ª–∏ –∫–æ–Ω—Ç—Ä–æ–ª—å –Ω–∞–¥ —É–∫—Ä–∞—ó–Ω—Å—å–∫–∏–º–∏ –∑–µ–º–ª—è–º–∏.\n"
        "1385 —Ä. ‚Äî –£–∫–ª–∞–¥–µ–Ω–Ω—è –ö—Ä–µ–≤—Å—å–∫–æ—ó —É–Ω—ñ—ó –º—ñ–∂ –ü–æ–ª—å—â–µ—é —Ç–∞ –õ–∏—Ç–≤–æ—é.\n\n"
        "üõ°Ô∏è –ö–æ–∑–∞—Ü—å–∫–∞ –¥–æ–±–∞\n\n"
        "1556‚Äì1561 —Ä—Ä. ‚Äî –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –ü–µ—Ä–µ—Å–æ–ø–Ω–∏—Ü—å–∫–æ–≥–æ –Ñ–≤–∞–Ω–≥–µ–ª—ñ—è.\n"
        "1556 —Ä. ‚Äî –ó–∞—Å–Ω—É–≤–∞–Ω–Ω—è –∫–Ω—è–∑–µ–º –î. –í–∏—à–Ω–µ–≤–µ—Ü—å–∫–∏–º –ø–µ—Ä—à–æ—ó –°—ñ—á—ñ –Ω–∞ –æ. –ú–∞–ª–∞ –•–æ—Ä—Ç–∏—Ü—è.\n"
        "1569 —Ä. ‚Äî –õ—é–±–ª—ñ–Ω—Å—å–∫–∞ —É–Ω—ñ—è; —É—Ç–≤–æ—Ä–µ–Ω–Ω—è –†–µ—á—ñ –ü–æ—Å–ø–æ–ª–∏—Ç–æ—ó..\n"
        "1586 —Ä. ‚Äî –£—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–µ—Ä—à–æ—ó –±—Ä–∞—Ç—Å—å–∫–æ—ó (—Å–ª–æ–≤'—è–Ω–æ-–≥—Ä–µ–∫–æ-–ª–∞—Ç–∏–Ω—Å—å–∫–æ—ó) —à–∫–æ–ª–∏ —É –º. –õ—å–≤—ñ–≤.\n"
        "1596 —Ä. ‚Äî –ë–µ—Ä–µ—Å—Ç–µ–π—Å—å–∫–∞ —É–Ω—ñ—è; —É—Ç–≤–æ—Ä–µ–Ω–Ω—è –£–∫—Ä–∞—ó–Ω—Å—å–∫–æ—ó –ì—Ä–µ–∫–æ-–ö–∞—Ç–æ–ª–∏—Ü—å–∫–æ—ó –¶–µ—Ä–∫–≤–∏..\n"
        "1618 —Ä. ‚Äî –ü–æ—Ö—ñ–¥ –∫–æ–∑–∞–∫—ñ–≤ –ø—ñ–¥ –ø—Ä–æ–≤–æ–¥–æ–º –≥–µ—Ç—å–º–∞–Ω–∞ –ü. –ö–æ–Ω–∞—à–µ–≤–∏—á–∞-–°–∞–≥–∞–π–¥–∞—á–Ω–æ–≥–æ –Ω–∞ –ú–æ—Å–∫–≤—É..\n"
        "1621 —Ä. ‚Äî –•–æ—Ç–∏–Ω—Å—å–∫–∞ –±–∏—Ç–≤–∞..\n"
        "1625 —Ä. ‚Äî –ö—É—Ä—É–∫—ñ–≤—Å—å–∫–∞ —É–≥–æ–¥–∞..\n"
    )
    await query.edit_message_text(text, reply_markup=InlineKeyboardMarkup(keyboard))

#-----------------------------------------------------------------------------------------------------------------------
async def HistoryDates3(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    keyboard = [
        [InlineKeyboardButton("üè† –£ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", callback_data='main_menu')],
        [InlineKeyboardButton("‚¨ÖÔ∏è –ú–∏–Ω—É–ª–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞", callback_data='HistoryDates2')],
        [InlineKeyboardButton("‚û°Ô∏è –ù–∞—Å—Ç—É–ø–Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞", callback_data='HistoryDates4')],
    ]

    text = (
        "üß≠ –ö–æ–∑–∞—Ü—å–∫–∞ –¥–µ—Ä–∂–∞–≤–∞ —Ç–∞ –†—É—ó–Ω–∞\n"
        "1648‚Äì1657 —Ä—Ä. ‚Äî –†—É—ó–Ω–∞ (–ø–µ—Ä—ñ–æ–¥ –ø–æ–ª—ñ—Ç–∏—á–Ω–æ—ó —ñ —Ç–µ—Ä–∏—Ç–æ—Ä—ñ–∞–ª—å–Ω–æ—ó –¥–µ–∑—ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—ó –õ—ñ–≤–æ–±–µ—Ä–µ–∂–Ω–æ—ó –£–∫—Ä–∞—ó–Ω–∏).\n"
        "1654 —Ä. ‚Äî –ü–µ—Ä–µ—è—Å–ª–∞–≤—Å—å–∫–∞ —É–≥–æ–¥–∞ –º—ñ–∂ –ú–æ—Å–∫–æ–≤—ñ—î—é —Ç–∞ –∫–æ–∑–∞—Ü—å–∫–æ—é –£–∫—Ä–∞—ó–Ω–æ—é.\n"
        "1667 —Ä. ‚Äî –ê–Ω–¥—Ä—É—Å—ñ–≤—Å—å–∫–∏–π –º–∏—Ä–Ω–∏–π –¥–æ–≥–æ–≤—ñ—Ä –º—ñ–∂ –ú–æ—Å–∫–æ–≤—ñ—î—é —Ç–∞ –†—ñ—á—á—é –ü–æ—Å–ø–æ–ª–∏—Ç–æ—é; –õ—ñ–≤–æ–±–µ—Ä–µ–∂–Ω–∞ –£–∫—Ä–∞—ó–Ω–∞ –∑–∞–ª–∏—à–∞–ª–∞—Å—è –ø—ñ–¥ –∫–æ–Ω—Ç—Ä–æ–ª–µ–º –ú–æ—Å–∫–æ–≤—ñ—ó.\n"
        "1686 —Ä. ‚Äî –í—ñ—á–Ω–∏–π –º–∏—Ä –º—ñ–∂ –ú–æ—Å–∫–æ–≤—ñ—î—é —Ç–∞ –†—ñ—á—á—é –ü–æ—Å–ø–æ–ª–∏—Ç–æ—é; –æ—Ñ—ñ—Ü—ñ–π–Ω–µ –≤–∏–∑–Ω–∞–Ω–Ω—è –õ—ñ–≤–æ–±–µ—Ä–µ–∂–Ω–æ—ó –£–∫—Ä–∞—ó–Ω–∏ –∑–∞ –ú–æ—Å–∫–æ–≤—ñ—î—é.\n"
        "üó∫Ô∏è –£–∫—Ä–∞—ó–Ω—Å—å–∫—ñ –∑–µ–º–ª—ñ —É —Å–∫–ª–∞–¥—ñ —ñ–Ω—à–∏—Ö –¥–µ—Ä–∂–∞–≤\n\n"
        "1775 —Ä. ‚Äî –õ—ñ–∫–≤—ñ–¥–∞—Ü—ñ—è –ó–∞–ø–æ—Ä—ñ–∑—å–∫–æ—ó –°—ñ—á—ñ.\n"
        "1793 —Ä. ‚Äî –î—Ä—É–≥–∏–π –ø–æ–¥—ñ–ª –†–µ—á—ñ –ü–æ—Å–ø–æ–ª–∏—Ç–æ—ó; –ø—Ä–∏—î–¥–Ω–∞–Ω–Ω—è –ü—Ä–∞–≤–æ–±–µ—Ä–µ–∂–Ω–æ—ó –£–∫—Ä–∞—ó–Ω–∏ –¥–æ –†–æ—Å—ñ–π—Å—å–∫–æ—ó —ñ–º–ø–µ—Ä—ñ—ó.\n"
        "1795 —Ä. ‚Äî –¢—Ä–µ—Ç—ñ–π –ø–æ–¥—ñ–ª –†–µ—á—ñ –ü–æ—Å–ø–æ–ª–∏—Ç–æ—ó; –æ—Å—Ç–∞—Ç–æ—á–Ω–µ –ø—Ä–∏—î–¥–Ω–∞–Ω–Ω—è –í–æ–ª–∏–Ω—ñ, –ü–æ–¥—ñ–ª–ª—è —Ç–∞ –°—Ö—ñ–¥–Ω–æ—ó –ì–∞–ª–∏—á–∏–Ω–∏ –¥–æ –†–æ—Å—ñ–π—Å—å–∫–æ—ó —ñ–º–ø–µ—Ä—ñ—ó.\n"
        "üèõÔ∏è –£–∫—Ä–∞—ó–Ω–∞ –≤ XIX ‚Äì –Ω–∞ –ø–æ—á–∞—Ç–∫—É XX —Å—Ç–æ–ª—ñ—Ç—Ç—è\n\n"
        "1861 —Ä. ‚Äî –°–∫–∞—Å—É–≤–∞–Ω–Ω—è –∫—Ä—ñ–ø–æ—Å–Ω–æ–≥–æ –ø—Ä–∞–≤–∞ –≤ –†–æ—Å—ñ–π—Å—å–∫—ñ–π —ñ–º–ø–µ—Ä—ñ—ó.\n"
        "1905 —Ä. ‚Äî –ü–µ—Ä—à–∞ —Ä–æ—Å—ñ–π—Å—å–∫–∞ —Ä–µ–≤–æ–ª—é—Ü—ñ—è; –ø–æ—á–∞—Ç–æ–∫ –ø–æ–ª—ñ—Ç–∏—á–Ω–æ—ó –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ —É–∫—Ä–∞—ó–Ω—Å—å–∫–∏—Ö –ø–∞—Ä—Ç—ñ–π.\n"
        "1917 —Ä. ‚Äî –õ—é—Ç–Ω–µ–≤–∞ —Ä–µ–≤–æ–ª—é—Ü—ñ—è –≤ –†–æ—Å—ñ—ó; –ø—Ä–æ–≥–æ–ª–æ—à–µ–Ω–Ω—è –£–∫—Ä–∞—ó–Ω—Å—å–∫–æ—ó –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ—ó –†–∞–¥–∏.\n"
        "üïäÔ∏è –£–∫—Ä–∞—ó–Ω—Å—å–∫–∞ —Ä–µ–≤–æ–ª—é—Ü—ñ—è —Ç–∞ –±–æ—Ä–æ—Ç—å–±–∞ –∑–∞ –Ω–µ–∑–∞–ª–µ–∂–Ω—ñ—Å—Ç—å\n\n"
        "1917‚Äì1921 —Ä—Ä. ‚Äî –£–∫—Ä–∞—ó–Ω—Å—å–∫–∞ —Ä–µ–≤–æ–ª—é—Ü—ñ—è.\n"
        "1918 —Ä. ‚Äî –ü—Ä–æ–≥–æ–ª–æ—à–µ–Ω–Ω—è –Ω–µ–∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –£–∫—Ä–∞—ó–Ω—Å—å–∫–æ—ó –ù–∞—Ä–æ–¥–Ω–æ—ó –†–µ—Å–ø—É–±–ª—ñ–∫–∏.\n"
        "1921 —Ä.‚Äî –†–∏–∑—å–∫–∏–π –º–∏—Ä–Ω–∏–π –¥–æ–≥–æ–≤—ñ—Ä; —Ä–æ–∑–ø–æ–¥—ñ–ª —É–∫—Ä–∞—ó–Ω—Å—å–∫–∏—Ö –∑–µ–º–µ–ª—å –º—ñ–∂ –ü–æ–ª—å—â–µ—é, –†–∞–¥—è–Ω—Å—å–∫–æ—é –†–æ—Å—ñ—î—é —Ç–∞ –†—É–º—É–Ω—ñ—î—é.\n"
    )

    await query.edit_message_text(text, reply_markup=InlineKeyboardMarkup(keyboard))
#-----------------------------------------------------------------------------------------------------------------------
async def HistoryDates4(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    keyboard = [
        [InlineKeyboardButton("üè† –£ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", callback_data='main_menu')],
        [InlineKeyboardButton("‚¨ÖÔ∏è –ú–∏–Ω—É–ª–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞", callback_data='HistoryDates3')],
    ]

    text = (
        "üß± –†–∞–¥—è–Ω—Å—å–∫–∞ –¥–æ–±–∞ —Ç–∞ –±–æ—Ä–æ—Ç—å–±–∞ –∑–∞ –Ω–µ–∑–∞–ª–µ–∂–Ω—ñ—Å—Ç—å\n"
        "1932‚Äì1933 —Ä—Ä. ‚Äî –ì–æ–ª–æ–¥–æ–º–æ—Ä –≤ –£–∫—Ä–∞—ó–Ω—ñ.\n"
        "1941‚Äì1945 —Ä—Ä. ‚Äî –î—Ä—É–≥–∞ —Å–≤—ñ—Ç–æ–≤–∞ –≤—ñ–π–Ω–∞; –æ–∫—É–ø–∞—Ü—ñ—è –£–∫—Ä–∞—ó–Ω–∏ –Ω–∞—Ü–∏—Å—Ç—Å—å–∫–æ—é –ù—ñ–º–µ—á—á–∏–Ω–æ—é.\n"
        "1945 —Ä. ‚Äî –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—è –î—Ä—É–≥–æ—ó —Å–≤—ñ—Ç–æ–≤–æ—ó –≤—ñ–π–Ω–∏; –£–∫—Ä–∞—ó–Ω–∞ —Å—Ç–∞–ª–∞ –æ–¥–Ω—ñ—î—é –∑ –∑–∞—Å–Ω–æ–≤–Ω–∏—Ü—å –û—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ—ó –û–±'—î–¥–Ω–∞–Ω–∏—Ö –ù–∞—Ü—ñ–π.\n"
        "1954 —Ä. ‚Äî –ü–µ—Ä–µ–¥–∞—á–∞ –ö—Ä–∏–º—Å—å–∫–æ—ó –æ–±–ª–∞—Å—Ç—ñ –∑ –†–†–§–°–† –¥–æ –£–†–°–†.\n"
        "1991 —Ä. ‚Äî –ü—Ä–æ–≥–æ–ª–æ—à–µ–Ω–Ω—è –Ω–µ–∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –£–∫—Ä–∞—ó–Ω–∏.\n"
        "üèõÔ∏è –ù–µ–∑–∞–ª–µ–∂–Ω–∞ –£–∫—Ä–∞—ó–Ω–∞\n\n"
        "1996 —Ä. ‚Äî –ü—Ä–∏–π–Ω—è—Ç—Ç—è –ö–æ–Ω—Å—Ç–∏—Ç—É—Ü—ñ—ó –£–∫—Ä–∞—ó–Ω–∏.\n"
        "2004 —Ä. ‚Äî –ü–æ–º–∞—Ä–∞–Ω—á–µ–≤–∞ —Ä–µ–≤–æ–ª—é—Ü—ñ—è.\n"
        "2014 —Ä. ‚Äî –Ñ–≤—Ä–æ–º–∞–π–¥–∞–Ω; –†–µ–≤–æ–ª—é—Ü—ñ—è –ì—ñ–¥–Ω–æ—Å—Ç—ñ; –∞–Ω–µ–∫—Å—ñ—è –ö—Ä–∏–º—É –†–æ—Å—ñ—î—é; –ø–æ—á–∞—Ç–æ–∫ –≤—ñ–π–Ω–∏ –Ω–∞ —Å—Ö–æ–¥—ñ –£–∫—Ä–∞—ó–Ω–∏.\n"
        "2019 —Ä. ‚Äî –ü—Ä–æ–≥–æ–ª–æ—à–µ–Ω–Ω—è –¢–æ–º–æ—Å—É –ø—Ä–æ –∞–≤—Ç–æ–∫–µ—Ñ–∞–ª—ñ—é –ü—Ä–∞–≤–æ—Å–ª–∞–≤–Ω–æ—ó —Ü–µ—Ä–∫–≤–∏ –£–∫—Ä–∞—ó–Ω–∏.\n"
        "2022 —Ä. ‚Äî –ü–æ–≤–Ω–æ–º–∞—Å—à—Ç–∞–±–Ω–µ –≤—Ç–æ—Ä–≥–Ω–µ–Ω–Ω—è —Ä–æ—Å—ñ—ó –≤ –£–∫—Ä–∞—ó–Ω—É.\n"
    )

    await query.edit_message_text(text, reply_markup=InlineKeyboardMarkup(keyboard))
#-----------------------------------------------------------------------------------------------------------------------
# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ø—Ä–∞–∫—Ç–∏—á–Ω–∏—Ö –∑–∞–≤–¥–∞–Ω–Ω—å
async def PrZavd(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    keyboard = [
        [InlineKeyboardButton("üìê–ü—Ä–∞–∫—Ç–∏—á–Ω—ñ –∑–∞–≤–¥–∞–Ω–Ω—è –∑ –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏", callback_data='PrZavdMathematics')],
        [InlineKeyboardButton("üìñ–ü—Ä–∞–∫—Ç–∏—á–Ω—ñ –∑–∞–≤–¥–∞–Ω–Ω—è –∑ –£–∫—Ä–∞—ó–Ω—Å—å–∫–æ—ó –º–æ–≤–∏", callback_data='PrZavdUkrMova')],
        [InlineKeyboardButton("üè∞ –ü—Ä–∞–∫—Ç–∏—á–Ω—ñ –∑–∞–≤–¥–∞–Ω–Ω—è –∑ –Ü—Å—Ç–æ—Ä—ñ—ó –£–∫—Ä–∞—ó–Ω–∏", callback_data='PrZavdHistory')],
        [InlineKeyboardButton("üè† –£ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", callback_data='main_menu')]
    ]
    try:
        await query.edit_message_text(
            text="–û–±–µ—Ä—ñ—Ç—å –ø—Ä–µ–¥–º–µ—Ç",
            reply_markup=InlineKeyboardMarkup(keyboard)
        )
    except BadRequest:
        pass
#-----------------------------------------------------------------------------------------------------------------------
# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ø—Ä–∞–∫—Ç–∏—á–Ω–∏—Ö –∑–∞–≤–¥–∞–Ω–Ω—å –∑ –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏
async def PrZavdMathematics(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    keyboard = [
        [InlineKeyboardButton("üè† –£ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", callback_data='main_menu')],
        [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data='PrZavd')],
    ]
    try:
        await query.edit_message_text(
            text="–£ —Ä–æ–∑—Ä–æ–±—Ü—ñüõ†Ô∏è",
            reply_markup=InlineKeyboardMarkup(keyboard)
        )
    except BadRequest:
        pass
#-----------------------------------------------------------------------------------------------------------------------
# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ø—Ä–∞–∫—Ç–∏—á–Ω–∏—Ö –∑–∞–≤–¥–∞–Ω–Ω—å –∑ –£–∫—Ä–∞—ó–Ω—Å—å–∫–æ—ó –º–æ–≤–∏
async def PrZavdUkrMova(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    keyboard = [
        [InlineKeyboardButton("üè† –£ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", callback_data='main_menu')],
        [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data='PrZavd')],
    ]
    try:
        await query.edit_message_text(
            text="–£ —Ä–æ–∑—Ä–æ–±—Ü—ñüõ†Ô∏è",
            reply_markup=InlineKeyboardMarkup(keyboard)
        )
    except BadRequest:
        pass
#-----------------------------------------------------------------------------------------------------------------------
# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ø—Ä–∞–∫—Ç–∏—á–Ω–∏—Ö –∑–∞–≤–¥–∞–Ω–Ω—å –∑ –Ü—Å—Ç–æ—Ä—ñ—ó –£–∫—Ä–∞—ó–Ω–∏
async def PrZavdHistory(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    keyboard = [
        [InlineKeyboardButton("üè† –£ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", callback_data='main_menu')],
        [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data='PrZavd')],
    ]
    try:
        await query.edit_message_text(
            text="–£ —Ä–æ–∑—Ä–æ–±—Ü—ñüõ†Ô∏è",
            reply_markup=InlineKeyboardMarkup(keyboard)
        )
    except BadRequest:
        pass
#-----------------------------------------------------------------------------------------------------------------------
# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –≥–æ–ª–æ–≤–Ω–æ—ó –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏ –∑ –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏
async def main_keyboard(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    keyboard = [
        [InlineKeyboardButton("üìê –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞", callback_data='Mathematics')],
        [InlineKeyboardButton("üìñ –£–∫—Ä–∞—ó–Ω—Å—å–∫–∞ –º–æ–≤–∞", callback_data='UkrMova')],
        [InlineKeyboardButton("üè∞ –Ü—Å—Ç–æ—Ä—ñ—è –£–∫—Ä–∞—ó–Ω–∏", callback_data='History')],
        [InlineKeyboardButton("üè† –£ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", callback_data='main_menu')]
    ]
    try:
        await query.edit_message_text(
            text="–û–±–µ—Ä—ñ—Ç—å –ø—Ä–µ–¥–º–µ—Ç –¥–ª—è –ø—ñ–¥–≥–æ—Ç–æ–≤–∫–∏:",
            reply_markup=InlineKeyboardMarkup(keyboard)
        )
    except BadRequest:
        pass
#-----------------------------------------------------------------------------------------------------------------------
# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–∞–≥—ñ–Ω–∞—Ü—ñ—ó —Ç–µ–º –∑ –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏
async def Mathematics(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    data = query.data
    # –û—Ç—Ä–∏–º—É—î–º–æ –Ω–æ–º–µ—Ä —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –∑ callback_data
    # –Ø–∫—â–æ callback_data - 'Mathematics', —Ç–æ —Ü–µ –ø–µ—Ä—à–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞
    if "_" in data and data.split("_")[1].isdigit():
        page = int(data.split("_")[1])
    else:
        page = 1
    total_pages = (len(mathematics_topics) + ITEMS_PER_PAGE - 1) // ITEMS_PER_PAGE
    if total_pages == 0 and len(mathematics_topics) > 0: # –î–ª—è –≤–∏–ø–∞–¥–∫—É, –∫–æ–ª–∏ —Ç–µ–º –º–µ–Ω—à–µ –Ω—ñ–∂ ITEMS_PER_PAGE
        total_pages = 1
    elif len(mathematics_topics) == 0: # –Ø–∫—â–æ —Å–ø–∏—Å–æ–∫ —Ç–µ–º –ø–æ—Ä–æ–∂–Ω—ñ–π
        total_pages = 0
    # –ó–∞–±–µ–∑–ø–µ—á—É—î–º–æ, —â–æ –Ω–æ–º–µ—Ä —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –¥–æ–ø—É—Å—Ç–∏–º–∏—Ö –º–µ–∂–∞—Ö
    if page < 1:
        page = 1
    elif page > total_pages and total_pages > 0:
        page = total_pages
    elif total_pages == 0: # –Ø–∫—â–æ –Ω–µ–º–∞—î —Ç–µ–º, —Ç–æ –Ω–µ–º–∞—î —ñ —Å—Ç–æ—Ä—ñ–Ω–æ–∫
        page = 0
    keyboard = [
        [InlineKeyboardButton("‚¨ÖÔ∏è–î–æ —Å–ø–∏—Å–∫—É –ø—Ä–µ–¥–º–µ—Ç—ñ–≤‚¨ÖÔ∏è", callback_data='main_keyboard')],
    ]
    if total_pages > 0: # –õ–∏—à–µ —è–∫—â–æ —î —Ç–µ–º–∏, –¥–æ–¥–∞—î–º–æ –∫–Ω–æ–ø–∫–∏ —Ç–µ–º
        start_index = (page - 1) * ITEMS_PER_PAGE
        end_index = start_index + ITEMS_PER_PAGE
        topics_on_page = mathematics_topics[start_index:end_index]
        for i, topic in enumerate(topics_on_page, start=start_index + 1):
            button_text = f"{EMOJI_START} –¢–µ–º–∞ {i}. {topic} {EMOJI_END}"
            # –£–Ω–∏–∫–∞–π—Ç–µ –∫–æ–ª—ñ–∑—ñ–π callback_data: `mathematics_topic_{i}`
            keyboard.append([InlineKeyboardButton(button_text, callback_data=f"mathematics_topic_{i}")])
    nav_buttons = []
    if page > 1:
        nav_buttons.append(InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f"Mathematics_{page - 1}"))

    nav_buttons.append(InlineKeyboardButton("üè† –í –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", callback_data="main_menu"))

    if total_pages > 0 and page < total_pages: # –ö–Ω–æ–ø–∫–∞ "–í–ø–µ—Ä–µ–¥" —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ —Ü–µ –Ω–µ –æ—Å—Ç–∞–Ω–Ω—è —Å—Ç–æ—Ä—ñ–Ω–∫–∞
        nav_buttons.append(InlineKeyboardButton("–í–ø–µ—Ä–µ–¥ ‚û°Ô∏è", callback_data=f"Mathematics_{page + 1}"))

    if nav_buttons: # –î–æ–¥–∞—î–º–æ —Ä—è–¥–æ–∫ –Ω–∞–≤—ñ–≥–∞—Ü—ñ–π–Ω–∏—Ö –∫–Ω–æ–ø–æ–∫, —è–∫—â–æ –≤–æ–Ω–∏ —î
        keyboard.append(nav_buttons)
    text_message = ""
    if total_pages > 0:
        text_message = f"üìö –°—Ç–æ—Ä—ñ–Ω–∫–∞ {page} –∑ {total_pages}\n\n–û–±–µ—Ä—ñ—Ç—å —Ç–µ–º—É –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É:"
    else:
        text_message = "–ù–∞—Ä–∞–∑—ñ –Ω–µ–º–∞—î —Ç–µ–º –∑ –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏."

    try:
        await query.edit_message_text(
            text=text_message,
            reply_markup=InlineKeyboardMarkup(keyboard)
        )
    except BadRequest:
        pass # –Ü–≥–Ω–æ—Ä—É—î–º–æ –ø–æ–º–∏–ª–∫—É, —è–∫—â–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–µ –∑–º—ñ–Ω–∏–ª–æ—Å—å
#-----------------------------------------------------------------------------------------------------------------------
# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–∞–≥—ñ–Ω–∞—Ü—ñ—ó —Ç–µ–º –∑ –£–∫—Ä–∞—ó–Ω—Å—å–∫–æ—ó –º–æ–≤–∏
async def UkrMova(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    data = query.data
    if "_" in data and data.split("_")[1].isdigit():
        page = int(data.split("_")[1])
    else:
        page = 1
    total_pages = (len(ukrainian_topics) + ITEMS_PER_PAGE - 1) // ITEMS_PER_PAGE
    if total_pages == 0 and len(ukrainian_topics) > 0:
        total_pages = 1
    elif len(ukrainian_topics) == 0:
        total_pages = 0
    if page < 1:
        page = 1
    elif page > total_pages and total_pages > 0:
        page = total_pages
    elif total_pages == 0:
        page = 0
    keyboard = [
        [InlineKeyboardButton("‚¨ÖÔ∏è–î–æ —Å–ø–∏—Å–∫—É –ø—Ä–µ–¥–º–µ—Ç—ñ–≤‚¨ÖÔ∏è", callback_data='main_keyboard')],
    ]
    if total_pages > 0:
        start_index = (page - 1) * ITEMS_PER_PAGE
        end_index = start_index + ITEMS_PER_PAGE
        topics_on_page = ukrainian_topics[start_index:end_index]

        for i, topic in enumerate(topics_on_page, start=start_index + 1):
            button_text = f"{EMOJI_START} –¢–µ–º–∞ {i}. {topic} {EMOJI_END}"
            keyboard.append([InlineKeyboardButton(button_text, callback_data=f"ukrainian_topic_{i}")])
    nav_buttons = []
    if page > 1:
        nav_buttons.append(InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f"UkrMova_{page - 1}"))
    nav_buttons.append(InlineKeyboardButton("üè† –í –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", callback_data="main_menu"))
    if total_pages > 0 and page < total_pages:
        nav_buttons.append(InlineKeyboardButton("–í–ø–µ—Ä–µ–¥ ‚û°Ô∏è", callback_data=f"UkrMova_{page + 1}"))

    if nav_buttons:
        keyboard.append(nav_buttons)
    text_message = ""
    if total_pages > 0:
        text_message = f"üìö –°—Ç–æ—Ä—ñ–Ω–∫–∞ {page} –∑ {total_pages}\n\n–û–±–µ—Ä—ñ—Ç—å —Ç–µ–º—É –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É:"
    else:
        text_message = "–ù–∞—Ä–∞–∑—ñ –Ω–µ–º–∞—î —Ç–µ–º –∑ —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—ó –º–æ–≤–∏."
    try:
        await query.edit_message_text(
            text=text_message,
            reply_markup=InlineKeyboardMarkup(keyboard)
        )
    except BadRequest:
        pass # –Ü–≥–Ω–æ—Ä—É—î–º–æ –ø–æ–º–∏–ª–∫—É, —è–∫—â–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–µ –∑–º—ñ–Ω–∏–ª–æ—Å—å
#-----------------------------------------------------------------------------------------------------------------------
# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ —Ñ–∞–π–ª—ñ–≤ –∑ —É–∫—Ä –º–æ–≤–∏
async def send_ukrainian_topic_file(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    try:
        topic_number = int(query.data.split("_")[-1])
        topic_name = ukrainian_topics[topic_number - 1].split(".")[0].replace(" ", "_")
        file_path = f"UkrMovaFiles/{topic_number}_{topic_name}.pdf"

        keyboard = [
            [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data='UkrMova')],
            [InlineKeyboardButton("üè† –£ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", callback_data='main_menu')],
        ]

        with open(file_path, "rb") as file:
            await query.message.reply_document(file, filename=os.path.basename(file_path))
            await query.message.reply_text("–û–±–µ—Ä—ñ—Ç—å –ø–æ–¥–∞–ª—å—à—É –¥—ñ—é:", reply_markup=InlineKeyboardMarkup(keyboard))

    except FileNotFoundError:
        await query.message.reply_text("‚ö†Ô∏è –§–∞–π–ª –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –ú–æ–∂–ª–∏–≤–æ, –≤—ñ–Ω —â–µ –Ω–µ –¥–æ–¥–∞–Ω–∏–π.")
    except Exception as e:
        await query.message.reply_text("–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—ñ —Ñ–∞–π–ª—É.")
        print(f"[send_ukrainian_topic_file] Error: {e}")

#-----------------------------------------------------------------------------------------------------------------------
# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Ä–æ–∑–¥—ñ–ª—É "–Ü—Å—Ç–æ—Ä—ñ—è –£–∫—Ä–∞—ó–Ω–∏"
async def History(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    keyboard = [
        # –ü—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ "–°–ø–∏—Å–æ–∫ —Ç–µ–º" –∑–∞–≤–∂–¥–∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º–æ –Ω–∞ –ø–µ—Ä—à—É —Å—Ç–æ—Ä—ñ–Ω–∫—É
        [InlineKeyboardButton("üìö –°–ø–∏—Å–æ–∫ —Ç–µ–º", callback_data='show_history_topics_1')],
        [InlineKeyboardButton("üßë‚Äçüè´ –ü–µ—Ä—Å–æ–Ω–∞–ª—ñ—ó", callback_data='history_personalities')],
        [InlineKeyboardButton("üèõÔ∏è –ê—Ä—Ö—ñ—Ç–µ–∫—Ç—É—Ä–∞", callback_data='history_architecture')],
        [InlineKeyboardButton("üé® –ú–∏—Å—Ç–µ—Ü—Ç–≤–æ", callback_data='history_art')],
        [InlineKeyboardButton("üè† –£ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", callback_data='main_menu')],
        [InlineKeyboardButton("‚¨ÖÔ∏è–î–æ —Å–ø–∏—Å–∫—É –ø—Ä–µ–¥–º–µ—Ç—ñ–≤‚¨ÖÔ∏è", callback_data='main_keyboard')]
    ]
    try:
        await query.edit_message_text(
            text="–û–±–µ—Ä—ñ—Ç—å —Ä–æ–∑–¥—ñ–ª –∑ —ñ—Å—Ç–æ—Ä—ñ—ó –£–∫—Ä–∞—ó–Ω–∏:",
            reply_markup=InlineKeyboardMarkup(keyboard)
        )
    except BadRequest:
        pass # –Ü–≥–Ω–æ—Ä—É—î–º–æ –ø–æ–º–∏–ª–∫—É, —è–∫—â–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–µ –∑–º—ñ–Ω–∏–ª–æ—Å—å
#-----------------------------------------------------------------------------------------------------------------------
# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è "–ü–µ—Ä—Å–æ–Ω–∞–ª—ñ—ó —ñ—Å—Ç–æ—Ä—ñ—è"
async def history_personalities(update: Update, context: ContextTypes.DEFAULT_TYPE):
    BASE_PATH = r"C:\Users\artem\Desktop\TgBotNmt\HistoryPersonalities"
    query = update.callback_query
    print(f"[DEBUG] –û—Ç—Ä–∏–º–∞–Ω–æ callback: {query.data}")
    await query.answer()

    data = query.data or ""
    number = 1
    if data.startswith('person_'):
        try:
            number = int(data.split('_')[1])
        except ValueError:
            number = 1

    photo_path = os.path.join(BASE_PATH, f"{number}.jpg")
    text_path = os.path.join(BASE_PATH, f"{number}.txt")

    # –ó–∞–≤–∂–¥–∏ –≤–∏–∑–Ω–∞—á–∞—î–º–æ –±–∞–∑–æ–≤—É –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É
    keyboard = [
        [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –¥–æ —Ä–æ–∑–¥—ñ–ª—É –Ü—Å—Ç–æ—Ä—ñ—è", callback_data='History')],
    ]

    # –î–æ–¥–∞—î–º–æ –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó, —è–∫—â–æ —Ü–µ –º–æ–∂–ª–∏–≤–æ
    nav_buttons = []
    if number > 1:
        nav_buttons.append(InlineKeyboardButton("‚¨ÖÔ∏è –ü–æ–ø–µ—Ä–µ–¥–Ω—è", callback_data=f'person_{number - 1}'))
    if number < 54:
        nav_buttons.append(InlineKeyboardButton("–ù–∞—Å—Ç—É–ø–Ω–∞ ‚û°Ô∏è", callback_data=f'person_{number + 1}'))

    if nav_buttons:
        keyboard.append(nav_buttons)

    # –ü–µ—Ä–µ—Ç–≤–æ—Ä—é—î–º–æ —Å–ø–∏—Å–æ–∫ —Å–ø–∏—Å–∫—ñ–≤ –Ω–∞ InlineKeyboardMarkup
    reply_markup = InlineKeyboardMarkup(keyboard)

    try:
        if os.path.exists(text_path):
            with open(text_path, 'r', encoding='utf-8') as f:
                text = f.read()
        else:
            text = "–¢–µ–∫—Å—Ç –¥–ª—è —Ü—ñ—î—ó –ø–µ—Ä—Å–æ–Ω–∞–ª—ñ—ó –≤—ñ–¥—Å—É—Ç–Ω—ñ–π."

        if os.path.exists(photo_path):
            with open(photo_path, 'rb') as photo_file:
                media = InputMediaPhoto(media=photo_file, caption=text)
                await query.edit_message_media(
                    media=media,
                    reply_markup=reply_markup # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ —Å—Ç–≤–æ—Ä–µ–Ω–∏–π reply_markup
                )
        else:
            await query.edit_message_text(
                text=text,
                reply_markup=reply_markup # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ —Å—Ç–≤–æ—Ä–µ–Ω–∏–π reply_markup
            )

    except BadRequest as e: # –ü–µ—Ä–µ—Ö–æ–ø–ª—é—î–º–æ –≤–∏–Ω—è—Ç–æ–∫, —â–æ–± –ø–æ–±–∞—á–∏—Ç–∏ –ø–æ–º–∏–ª–∫—É
        print(f"–ü–æ–º–∏–ª–∫–∞ BadRequest: {e}") # –í–∏–≤–æ–¥–∏–º–æ –ø–æ–º–∏–ª–∫—É –¥–ª—è –Ω–∞–ª–∞–≥–æ–¥–∂–µ–Ω–Ω—è
        await query.edit_message_text(
            text="–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞.",
            reply_markup=reply_markup # –í—Å–µ –æ–¥–Ω–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –ø–æ—Ç—Ä—ñ–±–Ω—É –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É
        )
# ------------------------------------------------------------------------------------------------------
# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è "–ê—Ä—Ö—ñ—Ç–µ–∫—Ç—É—Ä–∞ —ñ—Å—Ç–æ—Ä—ñ—è"
async def history_architecture(update: Update, context: ContextTypes.DEFAULT_TYPE):
    BASE_PATH1 = r"C:\Users\artem\Desktop\TgBotNmt\HistoryArchitecture"
    query = update.callback_query
    print(f"[DEBUG] –û—Ç—Ä–∏–º–∞–Ω–æ callback: {query.data}")
    await query.answer()
    data = query.data or ""
    number = 1
    if data.startswith('architecture_'):
        try:
            number = int(data.split('_')[1])
        except ValueError:
            number = 1

    photo_path = os.path.join(BASE_PATH1, f"{number}.jpg")
    text_path = os.path.join(BASE_PATH1, f"{number}.txt")

    keyboard = [
        [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –¥–æ —Ä–æ–∑–¥—ñ–ª—É –Ü—Å—Ç–æ—Ä—ñ—è", callback_data='History')],
    ]

    # –î–æ–¥–∞—î–º–æ –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó, —è–∫—â–æ —Ü–µ –º–æ–∂–ª–∏–≤–æ
    nav_buttons = []
    if number > 1:
        nav_buttons.append(InlineKeyboardButton("‚¨ÖÔ∏è –ü–æ–ø–µ—Ä–µ–¥–Ω—è", callback_data=f'architecture_{number - 1}'))
    if number < 53:
        nav_buttons.append(InlineKeyboardButton("–ù–∞—Å—Ç—É–ø–Ω–∞ ‚û°Ô∏è", callback_data=f'architecture_{number + 1}'))

    if nav_buttons:
        keyboard.append(nav_buttons)

    # –ü–µ—Ä–µ—Ç–≤–æ—Ä—é—î–º–æ —Å–ø–∏—Å–æ–∫ —Å–ø–∏—Å–∫—ñ–≤ –Ω–∞ InlineKeyboardMarkup
    reply_markup = InlineKeyboardMarkup(keyboard)

    try:
        if os.path.exists(text_path):
            with open(text_path, 'r', encoding='utf-8') as f:
                text = f.read()
        else:
            text = "–¢–µ–∫—Å—Ç –¥–ª—è —Ü—ñ—î—ó –∞—Ä—Ö—ñ—Ç–µ–∫—Ç—É—Ä–∏ –≤—ñ–¥—Å—É—Ç–Ω—ñ–π."

        if os.path.exists(photo_path):
            with open(photo_path, 'rb') as photo_file:
                media = InputMediaPhoto(media=photo_file, caption=text)
                await query.edit_message_media(
                    media=media,
                    reply_markup=reply_markup # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ —Å—Ç–≤–æ—Ä–µ–Ω–∏–π reply_markup
                )
        else:
            await query.edit_message_text(
                text=text,
                reply_markup=reply_markup # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ —Å—Ç–≤–æ—Ä–µ–Ω–∏–π reply_markup
            )

    except BadRequest as e: # –ü–µ—Ä–µ—Ö–æ–ø–ª—é—î–º–æ –≤–∏–Ω—è—Ç–æ–∫, —â–æ–± –ø–æ–±–∞—á–∏—Ç–∏ –ø–æ–º–∏–ª–∫—É
        print(f"–ü–æ–º–∏–ª–∫–∞ BadRequest: {e}") # –í–∏–≤–æ–¥–∏–º–æ –ø–æ–º–∏–ª–∫—É –¥–ª—è –Ω–∞–ª–∞–≥–æ–¥–∂–µ–Ω–Ω—è
        await query.edit_message_text(
            text="–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞.",
            reply_markup=reply_markup # –í—Å–µ –æ–¥–Ω–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –ø–æ—Ç—Ä—ñ–±–Ω—É –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É
        )
#-----------------------------------------------------------------------------------------------------------------------
# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è "–ú–∏—Å—Ç–µ—Ü—Ç–≤–æ —ñ—Å—Ç–æ—Ä—ñ—è"
async def history_art(update: Update, context: ContextTypes.DEFAULT_TYPE):
    BASE_PATH2 = r"C:\Users\artem\Desktop\TgBotNmt\HistoryArt"
    query = update.callback_query
    print(f"[DEBUG] –û—Ç—Ä–∏–º–∞–Ω–æ callback: {query.data}")
    await query.answer()
    data = query.data or ""
    number = 1
    if data.startswith('art_'):
        try:
            number = int(data.split('_')[1])
        except ValueError:
            number = 1

    photo_path = os.path.join(BASE_PATH2, f"{number}.jpg")
    text_path = os.path.join(BASE_PATH2, f"{number}.txt")

    keyboard = [
        [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –¥–æ —Ä–æ–∑–¥—ñ–ª—É –Ü—Å—Ç–æ—Ä—ñ—è", callback_data='History')],
    ]

    nav_buttons = []
    if number > 1:
        nav_buttons.append(InlineKeyboardButton("‚¨ÖÔ∏è –ü–æ–ø–µ—Ä–µ–¥–Ω—è", callback_data=f'art_{number - 1}'))
    if number < 37:
        nav_buttons.append(InlineKeyboardButton("–ù–∞—Å—Ç—É–ø–Ω–∞ ‚û°Ô∏è", callback_data=f'art_{number + 1}'))

    if nav_buttons:
        keyboard.append(nav_buttons)

    # –ü–µ—Ä–µ—Ç–≤–æ—Ä—é—î–º–æ —Å–ø–∏—Å–æ–∫ —Å–ø–∏—Å–∫—ñ–≤ –Ω–∞ InlineKeyboardMarkup
    reply_markup = InlineKeyboardMarkup(keyboard)

    try:
        if os.path.exists(text_path):
            with open(text_path, 'r', encoding='utf-8') as f:
                text = f.read()
        else:
            text = "–¢–µ–∫—Å—Ç –≤—ñ–¥—Å—É—Ç–Ω—ñ–π."

        if os.path.exists(photo_path):
            with open(photo_path, 'rb') as photo_file:
                media = InputMediaPhoto(media=photo_file, caption=text)
                await query.edit_message_media(
                    media=media,
                    reply_markup=reply_markup  # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ —Å—Ç–≤–æ—Ä–µ–Ω–∏–π reply_markup
                )
        else:
            await query.edit_message_text(
                text=text,
                reply_markup=reply_markup  # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ —Å—Ç–≤–æ—Ä–µ–Ω–∏–π reply_markup
            )

    except BadRequest as e:  # –ü–µ—Ä–µ—Ö–æ–ø–ª—é—î–º–æ –≤–∏–Ω—è—Ç–æ–∫, —â–æ–± –ø–æ–±–∞—á–∏—Ç–∏ –ø–æ–º–∏–ª–∫—É
        print(f"–ü–æ–º–∏–ª–∫–∞ BadRequest: {e}")  # –í–∏–≤–æ–¥–∏–º–æ –ø–æ–º–∏–ª–∫—É –¥–ª—è –Ω–∞–ª–∞–≥–æ–¥–∂–µ–Ω–Ω—è
        await query.edit_message_text(
            text="–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞.",
            reply_markup=reply_markup  # –í—Å–µ –æ–¥–Ω–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –ø–æ—Ç—Ä—ñ–±–Ω—É –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É
        )
#-----------------------------------------------------------------------------------------------------------------------
# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–∞–≥—ñ–Ω–∞—Ü—ñ—ó —Ç–µ–º –∑ —ñ—Å—Ç–æ—Ä—ñ—ó –£–∫—Ä–∞—ó–Ω–∏
async def show_history_topics(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    data = query.data
    # –û—á—ñ–∫—É—î–º–æ —Ñ–æ—Ä–º–∞—Ç 'show_history_topics_X', –¥–µ X - –Ω–æ–º–µ—Ä —Å—Ç–æ—Ä—ñ–Ω–∫–∏
    if "_" in data and data.split("_")[-1].isdigit(): # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ split("_")[-1] –¥–ª—è –Ω–∞–¥—ñ–π–Ω–æ—Å—Ç—ñ
        page = int(data.split("_")[-1])
    else:
        page = 1 # –Ø–∫—â–æ —Ü–µ –ø–µ—Ä—à–∏–π –≤–∏–∫–ª–∏–∫ –∞–±–æ —Ñ–æ—Ä–º–∞—Ç –Ω–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î, –ø–æ—á–∏–Ω–∞—î–º–æ –∑ 1 —Å—Ç–æ—Ä—ñ–Ω–∫–∏
    total_pages = (len(history_topics) + ITEMS_PER_PAGE - 1) // ITEMS_PER_PAGE
    if total_pages == 0 and len(history_topics) > 0: # –î–ª—è –≤–∏–ø–∞–¥–∫—É, –∫–æ–ª–∏ —Ç–µ–º –º–µ–Ω—à–µ –Ω—ñ–∂ ITEMS_PER_PAGE
        total_pages = 1
    elif len(history_topics) == 0: # –Ø–∫—â–æ —Å–ø–∏—Å–æ–∫ —Ç–µ–º –ø–æ—Ä–æ–∂–Ω—ñ–π
        total_pages = 0
    elif page > total_pages and total_pages > 0:
        page = total_pages
    elif total_pages == 0: # –Ø–∫—â–æ –Ω–µ–º–∞—î —Ç–µ–º, —Ç–æ –Ω–µ–º–∞—î —ñ —Å—Ç–æ—Ä—ñ–Ω–æ–∫
        page = 0
    keyboard = [
        [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –¥–æ —Ä–æ–∑–¥—ñ–ª—É –Ü—Å—Ç–æ—Ä—ñ—è", callback_data='History')],
    ]
    if total_pages > 0: # –õ–∏—à–µ —è–∫—â–æ —î —Ç–µ–º–∏, –¥–æ–¥–∞—î–º–æ –∫–Ω–æ–ø–∫–∏ —Ç–µ–º
        start_index = (page - 1) * ITEMS_PER_PAGE
        end_index = start_index + ITEMS_PER_PAGE
        topics_on_page = history_topics[start_index:end_index]
        for i, topic in enumerate(topics_on_page, start=start_index + 1):
            button_text = f"{EMOJI_START} –¢–µ–º–∞ {i}. {topic} {EMOJI_END}"
            keyboard.append([InlineKeyboardButton(button_text, callback_data=f"history_topic_{i}")])
    nav_buttons = []
    if page > 1:
        nav_buttons.append(InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f"show_history_topics_{page - 1}"))
    nav_buttons.append(InlineKeyboardButton("üè† –í –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", callback_data="main_menu"))
    if total_pages > 0 and page < total_pages: # –ö–Ω–æ–ø–∫–∞ "–í–ø–µ—Ä–µ–¥" —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ —Ü–µ –Ω–µ –æ—Å—Ç–∞–Ω–Ω—è —Å—Ç–æ—Ä—ñ–Ω–∫–∞
        nav_buttons.append(InlineKeyboardButton("–í–ø–µ—Ä–µ–¥ ‚û°Ô∏è", callback_data=f"show_history_topics_{page + 1}"))
    if nav_buttons: # –î–æ–¥–∞—î–º–æ —Ä—è–¥–æ–∫ –Ω–∞–≤—ñ–≥–∞—Ü—ñ–π–Ω–∏—Ö –∫–Ω–æ–ø–æ–∫, —è–∫—â–æ –≤–æ–Ω–∏ —î
        keyboard.append(nav_buttons)
    text_message = ""
    if total_pages > 0:
        text_message = f"üìö –°—Ç–æ—Ä—ñ–Ω–∫–∞ {page} –∑ {total_pages}\n\n–û–±–µ—Ä—ñ—Ç—å —Ç–µ–º—É –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É:"
    else:
        text_message = "–ù–∞—Ä–∞–∑—ñ –Ω–µ–º–∞—î —Ç–µ–º –∑ —ñ—Å—Ç–æ—Ä—ñ—ó –£–∫—Ä–∞—ó–Ω–∏."
    try:
        await query.edit_message_text(
            text=text_message,
            reply_markup=InlineKeyboardMarkup(keyboard)
        )
    except BadRequest:
        pass # –Ü–≥–Ω–æ—Ä—É—î–º–æ –ø–æ–º–∏–ª–∫—É, —è–∫—â–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–µ –∑–º—ñ–Ω–∏–ª–æ—Å—å
#-----------------------------------------------------------------------------------------------------------------------
# –¢–æ—á–∫–∞ –≤—Ö–æ–¥—É –≤ –ø—Ä–æ–≥—Ä–∞–º—É
if __name__ == '__main__':
    app = Application.builder().token(TOKEN).build()
    # –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –∫–æ–º–∞–Ω–¥
    app.add_handler(CommandHandler("start", start))
    # –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ callback-–∑–∞–ø–∏—Ç—ñ–≤
    app.add_handler(CallbackQueryHandler(main_menu, pattern='^main_menu$'))
    app.add_handler(CallbackQueryHandler(main_keyboard, pattern='^main_keyboard$'))
    app.add_handler(CallbackQueryHandler(HistoryDates1, pattern='^HistoryDates1$'))
    app.add_handler(CallbackQueryHandler(HistoryDates2, pattern='^HistoryDates2$'))
    app.add_handler(CallbackQueryHandler(HistoryDates3, pattern='^HistoryDates3$'))
    app.add_handler(CallbackQueryHandler(HistoryDates4, pattern='^HistoryDates4$'))
    app.add_handler(CallbackQueryHandler(PrZavd, pattern='^PrZavd$'))
    app.add_handler(CallbackQueryHandler(KorFail, pattern='^KorFail$'))
    app.add_handler(CallbackQueryHandler(DovMat, pattern='^DovMat$'))
    app.add_handler(CallbackQueryHandler(about_command, pattern='^about_command$'))
    app.add_handler(CallbackQueryHandler(help_command, pattern='^help_command$'))
    app.add_handler(CallbackQueryHandler(history_personalities, pattern=r'^person_\d+$'))
    app.add_handler(CallbackQueryHandler(history_architecture, pattern=r'^architecture_\d+$'))
    app.add_handler(CallbackQueryHandler(history_art, pattern=r'^art_\d+$'))
    app.add_handler(CallbackQueryHandler(PrZavdMathematics, pattern='^PrZavdMathematics$'))
    app.add_handler(CallbackQueryHandler(PrZavdUkrMova, pattern='^PrZavdUkrMova$'))
    app.add_handler(CallbackQueryHandler(PrZavdHistory, pattern='^PrZavdHistory$'))
    app.add_handler(CallbackQueryHandler(send_ukrainian_topic_file, pattern=r'^ukrainian_topic_\d+$'))
    app.add_handler(CallbackQueryHandler(Mathematics, pattern=r'^Mathematics(_\d+)?$'))
    app.add_handler(CallbackQueryHandler(UkrMova, pattern=r'^UkrMova(_\d+)?$'))
    app.add_handler(CallbackQueryHandler(History, pattern=r'^History$'))
    app.add_handler(CallbackQueryHandler(show_history_topics, pattern=r'^show_history_topics(_\d+)?$'))
    app.add_handler(CallbackQueryHandler(history_personalities, pattern='^history_personalities$'))
    app.add_handler(CallbackQueryHandler(history_architecture, pattern='^history_architecture$'))
    app.add_handler(CallbackQueryHandler(history_art, pattern='^history_art$'))

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ...")
    app.run_polling()
#-----------------------------------------------------------------------------------------------------------------------